{"version":3,"sources":["App.module.css","formsControl.module.css","common/customButton.module.css","common/loadingPage.module.css","profile/profile.module.css","dialogs/messages.module.css","sidebar/sidebar.module.css","user/user.module.css","header/Header.jsx","api/api.js","redux/profile-reducer.js","profile/heatter.jpg","common/loader.svg","profile/StatusWithHooks.jsx","redux/validators.js","formsControl.jsx","common/CustomButton.jsx","profile/Profile.jsx","hoc/withAuthRedirect.js","redux/profile-selector.js","profile/ProfileContainer.jsx","redux/messages-reducer.js","dialogs/Messages.jsx","data/messagesData.js","dialogs/MessagesContainer.jsx","common/LoadingPage.jsx","user/UserUnit.jsx","user/User.jsx","user/Walk.gif","redux/user-reducer.js","user/UserContainer.jsx","sidebar/Sidebar.jsx","redux/auth-reducer.js","sidebar/SidebarContainer.jsx","login/Login.jsx","redux/app-reducer.js","App.js","reportWebVitals.js","redux/news-reducer.js","redux/redux-store.js","index.js","header/header.module.css"],"names":["module","exports","connect","state","auth","props","className","s","header","headerTitle","login","instance","axios","withCredentials","headers","baseURL","userAPI","amountUsers","get","then","response","data","pageNumber","userID","post","delete","myAPI","profile","put","email","password","rememberMe","captcha","photoFile","formData","FormData","append","profileAPI","userId","status","ADD_POST","SET_USER","SET_STATUS","SAVE_PHOTO_SUCCESS","initialState","newPostText","posts","message","id","setStatus","type","getProfileThunkCreator","dispatch","a","user","profileReducer","action","photos","photo","Status","useState","editMode","setEditMode","profilePage","useEffect","onChange","e","currentTarget","value","onBlur","updateStatusThunkCreator","autoFocus","customStatus","onDoubleClick","hasText","undefined","maxLengthCreator","len","length","FormsControl","input","meta","child","hasError","touched","error","children","TextArea","restProps","Input","createCustomField","plaseholder","name","validators","component","text","Field","validate","CustomButton","cb","onClick","buttonStyle","Post","icone","maxLengthTen","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","writePost","textAreaInput","placeholder","buttonBox","AboutUser","open","setOpen","aboutWrapper","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactsWrapper","Object","keys","contacts","map","key","contactTitle","contactValue","buttonWrapper","isOwner","AboutUserReduxForm","initialValues","Contacs","Profile","createPost","item","content","src","heatter","profileHitter","avatarWrapper","large","avatar","userAvatar","target","files","savePhotoThunk","for","customInput","aboutUser","firstAbout","secondAbout","saveAboutMeThunk","values","addPost","mapStoreToPropsRerender","isAuth","withAuthRedirect","Component","RedirectComponent","this","to","React","getProfilePage","getId","ProfileAPIContainer","refreshProfile","prevProps","prevState","snapshot","match","params","authMe","getStatusThunkCreator","compose","resultCode","AboutMe","getState","stopSubmit","_error","messages","Promise","reject","withRouter","ADD_MESSAGE","GET_DIALOGS","dialogs","messagesReducer","maxLength300","Message","wrapperPost","icon","wrapperPostText","messageUser","username","MessageReduxForm","textAreaWrapper","viewElement","Messages","createMessage","useParams","userDialogIndex","messagesPage","findIndex","userDialog","authLogin","wrapper","userButtonWrapper","userLink","writeMessage","objDiv","document","getElementById","scrollTop","scrollHeight","addMessageDialogs","addMessageActionCreator","getDialogs","LoadingPage","loadingWrapper","LoadIcone","UserUnit","userWrapper","userIcone","textWrapper","userName","about","disabled","userFollowIsFetching","some","followed","unfollowOnUserThunkCreator","followOnUserThunkCreator","User","page","i","userPage","currentPage","amountPage","push","pageLoad","users","followFetching","unfollowFetching","followingInProgress","onPageChange","pageNumWrapper","activeLi","commonLi","FOLLOW","SET_USERS","SET_AMOUNT_PAGE","CHANGE_CURRENT_PAGE","CHANGE_PAGE_LOAD","FOLLOW_FETCHING","follow","setUsers","changePageLoad","change","fetching","UserAPIComponent","onPageChangeThunkCreator","getUsersThunkCreator","items","num","Math","ceil","totalCount","newCurrentPage","Sidebar","sideBar","menu","navElement","sideButton","logout","SET_AUTH_USER","SET_CAPCHA","capcha","setAuthUser","setCapcha","getMyThunkCreator","capchaThunk","url","authReducer","SidebarAPIContainer","loginCheck","bind","SidebarContainer","LoginReduxForm","loginWrapper","console","log","INITIALIZED_SUCCSESS","initialized","AppReducer","App","initializedApp","app","path","render","ProfileContainer","MessagesContainer","UserContainer","promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_NEWS","newNewsText","news","newsReducer","reducers","combineReducers","newsPage","filter","formReducer","store","createStore","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.afba35c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1U2Qu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formsControl_error__2dUvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonStyle\":\"customButton_buttonStyle__25O9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingWrapper\":\"loadingPage_loadingWrapper__3Gg8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"profile_content__fUO9X\",\"profileHitter\":\"profile_profileHitter__22wCT\",\"userAvatar\":\"profile_userAvatar__2oCsv\",\"avatarWrapper\":\"profile_avatarWrapper__20HaL\",\"customInput\":\"profile_customInput__2KM89\",\"firstAbout\":\"profile_firstAbout__1ziJ2\",\"secondAbout\":\"profile_secondAbout__H7RI3\",\"aboutWrapper\":\"profile_aboutWrapper__j3NGD\",\"aboutUser\":\"profile_aboutUser__3v2-Z\",\"posts\":\"profile_posts__KILcD\",\"textAreaInput\":\"profile_textAreaInput__wZdOc\",\"writePost\":\"profile_writePost__3B1Wb\",\"buttonBox\":\"profile_buttonBox__1nEck\",\"post\":\"profile_post__ahNa1\",\"icone\":\"profile_icone__37mC5\",\"buttonWrapper\":\"profile_buttonWrapper___TKi5\",\"customStatus\":\"profile_customStatus__1FHCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"messages_wrapper__2m5kz\",\"dialogs\":\"messages_dialogs__Pf99-\",\"messages\":\"messages_messages__3Aeoc\",\"writeMessage\":\"messages_writeMessage__19-lI\",\"wrapperPost\":\"messages_wrapperPost__35lcT\",\"icon\":\"messages_icon__3R1OR\",\"wrapperPostText\":\"messages_wrapperPostText__2twKc\",\"messageUser\":\"messages_messageUser__2GJWm\",\"textAreaInput\":\"messages_textAreaInput__2UZdy\",\"textAreaWrapper\":\"messages_textAreaWrapper__2qr0D\",\"buttonWrapper\":\"messages_buttonWrapper__2I37c\",\"userButtonWrapper\":\"messages_userButtonWrapper__2oSqq\",\"userLink\":\"messages_userLink__3wJu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"sidebar_sideBar__3weql\",\"menu\":\"sidebar_menu__39MBJ\",\"navElement\":\"sidebar_navElement__2HbfM\",\"sideButton\":\"sidebar_sideButton__3eluO\",\"userList\":\"sidebar_userList__38eaz\",\"login\":\"sidebar_login__1MB4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"user_content__3OLCG\",\"userWrapper\":\"user_userWrapper__2bAws\",\"username\":\"user_username__1KGki\",\"userIcone\":\"user_userIcone__2tWaO\",\"textWrapper\":\"user_textWrapper__21Z_d\",\"buttonStyle\":\"user_buttonStyle__2qC9U\",\"buttonWrapper\":\"user_buttonWrapper__3EQo5\",\"pageNumWrapper\":\"user_pageNumWrapper__WH7xj\",\"commonLi\":\"user_commonLi__1OwNP\",\"activeLi\":\"user_activeLi__3w8gB\",\"wrapperLoadIcone\":\"user_wrapperLoadIcone__3RHFa\"};","import logo from './logo.png';\r\nimport React from 'react';\r\nimport s from './header.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { propTypes } from 'redux-form';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header \r\n            className = {s.header}\r\n        >\r\n            <h3\r\n                className={s.headerTitle}\r\n            >Социальная сеть</h3>\r\n            <h3\r\n                className={s.login}\r\n            >{props.auth.login}</h3>\r\n        </header>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'ec60f1de-a2b2-4c79-9592-52195d4db1e8',\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n});\r\n\r\nexport let userAPI = {\r\n    getUsers(amountUsers) {\r\n        return (\r\n            instance.get(`users?count=${amountUsers}`).then((response) => {\r\n                return response.data\r\n            })\r\n        );\r\n    },\r\n    getNewPageUsers(pageNumber) {\r\n        return (\r\n            instance.get(`users?page=${pageNumber}`).then((response) => {\r\n                return response.data\r\n            })\r\n        );\r\n    },\r\n    followOnUser(userID) {\r\n        return (\r\n            instance.post(`follow/${userID}`).then((response) => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    unfollowOnUser(userID) {\r\n        return (\r\n            instance.delete(`follow/${userID}`).then((response) => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n}\r\n\r\nexport const myAPI = {\r\n    getMe () {\r\n        return (\r\n            instance.get('auth/me')\r\n        )\r\n    },\r\n    saveAboutMe (profile) {\r\n        return (\r\n            instance.put('profile', profile)\r\n        )\r\n    },\r\n    login (email, password, rememberMe = false, captcha = null) {\r\n        return (\r\n            instance.post('auth/login', {email, password, rememberMe, captcha})\r\n        )\r\n    },\r\n    logout () {\r\n        return (\r\n            instance.delete('auth/login')\r\n        )\r\n    },\r\n    savePhoto (photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return (\r\n            instance.put(\"profile/photo\", formData, {\r\n                headers: {\r\n                    \"content-type\" : \"multipart/form-data\",\r\n                }\r\n            })\r\n        )\r\n    },\r\n    capcha () {\r\n        return (\r\n            instance.get(\"security/get-captcha-url\")\r\n        );\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {status: status})\r\n        )\r\n    }\r\n}","import { stopSubmit } from 'redux-form';\r\nimport {myAPI, profileAPI} from '../api/api';\r\n\r\nlet ADD_POST = \"profile-reducer/ADD_POST\";\r\nlet SET_USER = \"profile-reducer/SET_USER\";\r\nlet SET_STATUS = \"profile-reducer/SET_STATUS\";\r\nlet SAVE_PHOTO_SUCCESS = 'profile-reducer/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    newPostText: \"\",\r\n    posts: [\r\n        {message: 'Hello', id: 1},\r\n        {message: 'How are u?', id: 2},\r\n        {message: 'Hi', id: 5},\r\n        {message: 'Privet', id: 3},\r\n        {message: 'Kak dela', id: 2},\r\n    ],\r\n    profile: '',\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [\r\n                    ...state.posts,\r\n                    {message: action.newPostText, id: 5}\r\n                ],\r\n            };\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                profile: action.user,\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photo\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let addPost = (newPostText) => {\r\n    return {type: \"profile-reducer/ADD_POST\", newPostText}\r\n}\r\nexport let setUser = (user) => {\r\n    return {type: \"profile-reducer/SET_USER\",\r\n            user}\r\n}\r\nexport let setStatus = (status) => {\r\n    return {\r\n        type: 'profile-reducer/SET_STATUS',\r\n        status\r\n    }\r\n}\r\n\r\nexport const savePhotoSuccess = (photo) => {\r\n    return {\r\n        type: 'profile-reducer/SAVE_PHOTO_SUCCESS',\r\n        photo\r\n    }\r\n}\r\n\r\nexport const getProfileThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getProfile(userId);\r\n\r\n        dispatch(setUser(response.data));\r\n    }\r\n}\r\nexport const getStatusThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId);\r\n\r\n        dispatch(setStatus(response.data));\r\n    }\r\n}\r\nexport const updateStatusThunkCreator = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n        \r\n        if (response.data.resultCode == 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n}\r\n\r\nexport const savePhotoThunk = (photoFile) => {\r\n    return async (dispatch) => {\r\n        let response = await myAPI.savePhoto(photoFile);\r\n\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const saveAboutMeThunk = (AboutMe) => {\r\n    return async (dispatch, getState) => {\r\n        const userId = getState().auth.id;\r\n        let response = await myAPI.saveAboutMe(AboutMe);\r\n\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(getProfileThunkCreator(userId));\r\n        } else {\r\n            dispatch(stopSubmit('aboutUserForm', {_error: response.data.messages[0]}));\r\n            return Promise.reject(response.data.messages[0]);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","export default __webpack_public_path__ + \"static/media/heatter.cc38c3a0.jpg\";","export default __webpack_public_path__ + \"static/media/loader.70ef5a99.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport s from './profile.module.css';\r\n\r\nexport const Status = (props) =>  {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.profilePage.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.profilePage.status)\r\n    }, [props.profilePage.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatusThunkCreator(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        {editMode \r\n        ? <input onChange = {onStatusChange} onBlur = {deactivateEditMode} autoFocus = {true} type=\"text\" value = {status} /> \r\n        : <><span>Статус:</span><b className={s.customStatus} onDoubleClick = {activateEditMode} >{status || \"------\"}</b></>}\r\n    </>\r\n    )\r\n}","export const hasText = (value) => {\r\n    return value ? undefined : \"Поле должно быть заполнено\";\r\n} \r\n\r\nexport const maxLengthCreator = (len) => (value) => {\r\n    if (value) {\r\n        return value.length <= len ? undefined : \"Слишком много символов\";\r\n    }\r\n};","import { Field } from 'redux-form';\r\nimport s from './formsControl.module.css';\r\n\r\nconst FormsControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched&&meta.error;\r\n    return (\r\n        <div className = {hasError ? s.error : ''}> \r\n            {props.children}\r\n            {hasError ? <div>{meta.error}</div> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormsControl {...props}><textarea {...input} {...restProps}/></FormsControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormsControl {...props}><input {...input} {...restProps}/></FormsControl>\r\n}\r\n\r\nexport const createCustomField = (plaseholder, name, validators, component, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field\r\n            plaseholder = {plaseholder}\r\n            name = {name}\r\n            validate = {validators}\r\n            component = {component}\r\n            {...props}/> {text}\r\n        </div>\r\n    )\r\n}","import s from './customButton.module.css';\r\n\r\nconst CustomButton = ({cb, children}) => {\r\n    return <button onClick={cb} className={s.buttonStyle}>{children}</button>\r\n}\r\n\r\nexport default CustomButton","import heatter from './heatter.jpg';\r\nimport avatar from '../common/loader.svg';\r\nimport React, { useState } from 'react';\r\nimport s from './profile.module.css';\r\nimport { Status } from './StatusWithHooks';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator } from '../redux/validators';\r\nimport { Input, TextArea } from '../formsControl';\r\nimport { createCustomField } from '../formsControl';\r\nimport CustomButton from '../common/CustomButton';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className = {s.post}><div className = {s.icone}></div>{props.post}</div>\r\n    );\r\n}\r\n\r\nlet maxLengthTen = maxLengthCreator(10);\r\n\r\nconst PostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div className = {s.writePost}><Field className={s.textAreaInput} validate = {[maxLengthTen]} placeholder = {\"Login\"} name = {\"newPostText\"} component = {TextArea}/></div>\r\n            <div className = {s.buttonBox}><CustomButton cb = {props.handleSubmit}>Отправить</CustomButton></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet PostReduxForm = reduxForm({form: 'post'})(PostForm);\r\n\r\nconst Profile = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length){\r\n            props.savePhotoThunk(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    let createPost = props.profilePage.posts.map((item) => {\r\n        return (\r\n            <>\r\n                <Post post = {item.message}/>\r\n            </>\r\n        );\r\n    });\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        values.newPostText = ''\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveAboutMeThunk(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n    <div className = {s.content}>\r\n        <img \r\n            src = {heatter} \r\n            className = {s.profileHitter}\r\n        ></img>\r\n        <div\r\n            className={s.avatarWrapper}\r\n        >\r\n            <img \r\n                src = {\r\n                    props.profilePage.profile \r\n                    ? props.profilePage.profile.photos.large \r\n                    : avatar\r\n                } \r\n                    className = {s.userAvatar}\r\n                ></img>\r\n            {props.isOwner && <input name = {\"file\"} id = {\"file\"} type = {\"file\"} onChange = {onMainPhotoSelected}/>}\r\n            {props.isOwner && <label for=\"file\" className={s.customInput}>Изменить фото</label>}\r\n            \r\n        </div>\r\n        \r\n        <div className = {s.aboutUser}>\r\n            <div className={s.firstAbout}>\r\n                <div>\r\n                    <h3>{props.profilePage.profile.fullName}</h3><Status profilePage = {props.profilePage}\r\n                                                                            updateStatusThunkCreator = {props.updateStatusThunkCreator}/>\r\n                </div>\r\n                <p>День рождения: 03.04.</p>\r\n                <p>Город: Москва</p>\r\n                <p>Образование: МАТИ</p>\r\n            </div>\r\n            <div className={s.secondAbout}>\r\n                {editMode\r\n                ? <AboutUserReduxForm onSubmit = {onSubmit} initialValues = {props.profilePage.profile}/>\r\n                : (props.profilePage.profile && <AboutUser editMode = {() => {setEditMode(true)}} isOwner = {props.isOwner} profile = {props.profilePage.profile}/>)}\r\n            </div>\r\n        </div>\r\n        <div className = {s.posts}>\r\n            <div><h3>Мои посты</h3></div>\r\n            <PostReduxForm  onSubmit = {addPost}/>\r\n            {createPost}           \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nconst AboutUser = (props) => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleOpen = () => setOpen(true)\r\n    const handleClose = () => setOpen(false)\r\n\r\n    return (\r\n        <>\r\n            <ul className={s.aboutWrapper}>\r\n                <li><b>Full name:</b> {props.profile.fullName}</li>\r\n                <li><b>Looking for a job:</b> {props.profile.lookingForAJob ? \"Yes\" : \"No\"}</li>\r\n                { props.profile.lookingForAJob &&\r\n                    <li><b>My proffessionals skils:</b> {props.profile.lookingForAJobDescription}</li>\r\n                }\r\n                <li><b>About me:</b> {props.profile.aboutMe}</li>\r\n                {\r\n                    open && <li className={s.contactsWrapper}>\r\n                                <b>Contacts:</b>\r\n                                <ul>\r\n                                    {Object.keys(props.profile.contacts).map((key) => {\r\n                                        return <Contacs key = {key} contactTitle = {key} contactValue = {props.profile.contacts[key]}/>\r\n                                    })}\r\n                                </ul>\r\n                            </li>\r\n                    \r\n                }\r\n            </ul>\r\n            <div className={s.buttonWrapper}>\r\n                {\r\n                    !open\r\n                        ? <CustomButton cb={handleOpen}>Развернуть</CustomButton>\r\n                        : <CustomButton cb={handleClose}>Свернуть</CustomButton>\r\n                }\r\n                {props.isOwner && <CustomButton cb = {props.editMode}>Редактировать</CustomButton>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst AboutUserForm = ({handleSubmit, initialValues, error}) => {\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            {error && <div>{error}</div>}\r\n            <ul>\r\n                \r\n                <li><b>Full name:</b> {createCustomField(\"Full name\", \"fullName\", [], Input)}</li>\r\n                <li><b>Looking for a job:</b> <Field component = {\"input\"} name = {\"lookingForAJob\"} type = {\"checkbox\"}/></li>\r\n                <li><b>My proffessionals skils:</b> {createCustomField(\"skils\", \"lookingForAJobDescription\", [], Input)}</li>\r\n                <li><b>About me:</b> {createCustomField(\"About me\", \"aboutMe\", [], Input)}</li>\r\n                <li><b>Contacts:</b>\r\n                    <ul>\r\n                        {Object.keys(initialValues.contacts).map((key) => {\r\n                            return <li><b>{key}:</b> {createCustomField(key, \"contacts.\" + key, null, Input)}</li>\r\n                        })}\r\n                    </ul>\r\n                </li>\r\n                <li><CustomButton cb = {handleSubmit}>Save</CustomButton></li>\r\n            </ul>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AboutUserReduxForm = reduxForm({form: 'aboutUserForm'})(AboutUserForm)\r\n\r\nconst Contacs = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <li><b>{contactTitle}</b>: {contactValue}</li>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStoreToPropsRerender = (state) => {\r\n    return {\r\n        auth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.auth) {\r\n                return (\r\n                    <Redirect to = {'/Login'}/>\r\n                )\r\n            }\r\n            return (\r\n                <Component {...this.props}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStoreToPropsRerender)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","export const getProfilePage = (state) => {\r\n    return state.profilePage;\r\n}\r\n\r\nexport const getId = (state) => {\r\n    return state.auth.id;\r\n}","import { connect } from 'react-redux';\r\nimport {addPost,getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator, savePhotoThunk, saveAboutMeThunk} from '../redux/profile-reducer';\r\nimport Profile from './Profile.jsx';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getId, getProfilePage } from '../redux/profile-selector';\r\n\r\nclass ProfileAPIContainer extends React.Component {\r\n    componentDidMount () {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.id != this.props.match.params.id) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.id ? this.props.match.params.id : this.props.authMe;\r\n        this.props.getProfileThunkCreator(userId);\r\n        this.props.getStatusThunkCreator(userId);\r\n    }\r\n\r\n    render () {\r\n    \r\n        return (\r\n            <Profile profilePage = {this.props.profilePage}\r\n                        addPost = {this.props.addPost}\r\n                        updateStatusThunkCreator = {this.props.updateStatusThunkCreator}\r\n                        isOwner = {this.props.match.params.id == this.props.authMe}\r\n                        savePhotoThunk = {this.props.savePhotoThunk}\r\n                        saveAboutMeThunk = {this.props.saveAboutMeThunk}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: getProfilePage(state),\r\n        authMe: getId(state),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addPost,\r\n        getProfileThunkCreator,\r\n        getStatusThunkCreator,\r\n        updateStatusThunkCreator,\r\n        savePhotoThunk,\r\n        saveAboutMeThunk\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileAPIContainer);","let ADD_MESSAGE = \"messages-reducer/ADD_MESSAGE\";\r\nlet GET_DIALOGS = \"messages-reducer/GET_DIALOGS\";\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {message: 'Hello', id: 1},\r\n        {message: 'How are u?', id: 2},\r\n        {message: 'Hi', id: 5},\r\n    ],\r\n    dialogs: []\r\n}\r\n\r\nlet messagesReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [\r\n                    ...state.messages,\r\n                    {message: action.message, id: 3}\r\n                ],\r\n            };\r\n        case GET_DIALOGS:\r\n            return {\r\n                ...state,\r\n                dialogs: [...action.dialogs]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getDialogs = (dialogs) => {\r\n    return {\r\n        type: 'messages-reducer/GET_DIALOGS',\r\n        dialogs,\r\n    }\r\n}\r\n\r\nexport let addMessageActionCreator = (message) => {\r\n    return {type: \"messages-reducer/ADD_MESSAGE\", message}\r\n}\r\n\r\nexport default messagesReducer;","import s from './messages.module.css';\r\nimport React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../formsControl';\r\nimport { maxLengthCreator } from '../redux/validators';\r\nimport CustomButton from '../common/CustomButton'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst maxLength300 = maxLengthCreator(300);\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div id='wrapperPost' className = {s.wrapperPost}>\r\n            <div className = {s.icon}> </div>\r\n            <div className={s.wrapperPostText}>\r\n                <h4 className = {s.messageUser}>{props.username}</h4>\r\n                <p>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div\r\n                className={s.textAreaWrapper}\r\n            >\r\n                <Field\r\n                className={s.textAreaInput}\r\n                    placeholder = {\"Write message\"} \r\n                    name = {\"message\"} \r\n                    component = {TextArea} \r\n                    validate = {maxLength300}\r\n                />\r\n            </div>\r\n            <div className={s.buttonWrapper}>\r\n                <CustomButton cb = {props.viewElement}>\r\n                    Отправить\r\n                </CustomButton>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet MessageReduxForm = reduxForm({form: 'messageForm'})(MessageForm);\r\n\r\nconst Messages = (props) => {\r\n    let createMessage = [];\r\n\r\n    const {id} = useParams()\r\n\r\n    const userDialogIndex = props.messagesPage.dialogs.findIndex((item) => item.username === id)\r\n\r\n    const userDialog = props.messagesPage.dialogs[userDialogIndex];\r\n    \r\n    if (userDialog) {\r\n        createMessage = userDialog.messages.map((item) => {\r\n            return(\r\n                <Message authLogin = {props.authLogin} key = {item.id} username = {item.username} message = {item.message}/>\r\n            ); \r\n    });\r\n    }\r\n\r\n    const viewElement = () => {\r\n        const objDiv = document.getElementById(\"messages\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n\r\n    let addMessage = (value) => {\r\n        props.addMessageDialogs(value.message);\r\n    }\r\n    \r\n    return (\r\n        <content className = {s.wrapper}>\r\n            <div className = {s.dialogs}>\r\n                <ul className={s.userButtonWrapper}>\r\n                    {\r\n                        props.messagesPage.dialogs.map((item) => {\r\n                            return (\r\n                                <li>\r\n                                    <NavLink key={item.username} className={s.userLink} to = {'/Messages/' + item.username}>\r\n                                        <p>\r\n                                            {item.username}\r\n                                        </p>\r\n                                    </NavLink>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div  id = 'messages' className = {s.messages}>\r\n                {createMessage}\r\n            </div>\r\n            <div className = {s.writeMessage}>\r\n                <MessageReduxForm viewElement = {viewElement} onSubmit = {addMessage}/>\r\n            </div>\r\n        </content>\r\n    );\r\n}\r\n\r\nexport default Messages;","export const messages = [\r\n    {\r\n        username: 'john',\r\n        messages: [\r\n            {\r\n                username: 'john',\r\n                id: '1',\r\n                message: 'Fugiat et incididunt.'\r\n            },\r\n            {\r\n                username: 'authUser',\r\n                id: '2',\r\n                message: 'Fugiat et incididunt adipisicing amet amet esse sit est qui ex tempor anim labore sunt.'\r\n            },\r\n            {\r\n                username: 'john',\r\n                id: '3',\r\n                message: 'Fugiat et incididunt adipisicing amet amet esse sit est qui ex tempor.'\r\n            },\r\n            {\r\n                username: 'john',\r\n                id: '20',\r\n                message: 'Fugiat et incididunt adipisicing amet amet esse sit est .'\r\n            },\r\n            {\r\n                username: 'authUser',\r\n                id: '4',\r\n                message: 'Fugiat et incididunt adipisicing amet.'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        username: 'Elizabeth',\r\n        messages: [\r\n            {\r\n                username: 'authUser',\r\n                id: '5',\r\n                message: 'Laborum et consequat nostrud eiusmod proident deserunt laborum est.'\r\n            },\r\n            {\r\n                username: 'Elizabeth',\r\n                id: '6',\r\n                message: 'Fugiat et incididunt adipisicing.'\r\n            },\r\n            {\r\n                username: 'Elizabeth',\r\n                id: '7',\r\n                message: 'Aliqua esse enim pariatur ea.'\r\n            },\r\n            {\r\n                username: 'authUser',\r\n                id: '8',\r\n                message: 'Fugiat et incididunt adipisicing amet amet esse sit est .'\r\n            },\r\n            {\r\n                username: 'authUser',\r\n                id: '9',\r\n                message: 'Incididunt ipsum eu deserunt cupidatat eu nostrud aute cillum minim ipsum ad ipsum aliqua. Aliqua esse enim pariatur ea.'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        username: 'Anna',\r\n        messages: [\r\n            {\r\n                username: 'Anna',\r\n                id: '10',\r\n                message: 'Incididunt ipsum eu deserunt cupidatat eu nostrud aute cillum minim ipsum ad ipsum aliqua.'\r\n            },\r\n            {\r\n                username: 'authUser',\r\n                id: '11',\r\n                message: 'Fugiat et incididunt adipisicing amet amet esse sit est qui ex tempor anim labore sunt.'\r\n            },\r\n            {\r\n                username: 'Anna',\r\n                id: '12',\r\n                message: 'Incididunt ipsum eu deserunt cupidatat eu.'\r\n            },\r\n            {\r\n                username: 'authUser',\r\n                id: '13',\r\n                message: 'Fugiat et incididunt.'\r\n            },\r\n            {\r\n                username: 'Anna',\r\n                id: '14',\r\n                message: 'Fugiat et incididunt adipisicing amet.'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        username: 'Mark',\r\n        messages: [\r\n            {\r\n                username: 'Mark',\r\n                id: '15',\r\n                message: 'Aliqua esse enim pariatur ea.'\r\n            },\r\n            {\r\n                username: 'Mark',\r\n                id: '16',\r\n                message: 'Fugiat et incididunt adipisicing amet amet esse sit est qui ex tempor anim labore sunt.'\r\n            },\r\n            {\r\n                username: 'Mark',\r\n                id: '17',\r\n                message: 'Fugiat et incididunt adipisicing amet amet esse sit est qui ex tempor.'\r\n            },\r\n            {\r\n                username: 'Mark',\r\n                id: '18',\r\n                message: 'Id pariatur velit enim non et eu nisi occaecat quis sunt consectetur proident consectetur laborum. Laborum et consequat nostrud eiusmod proident deserunt laborum est.'\r\n            },\r\n            {\r\n                username: 'authUser',\r\n                id: '19',\r\n                message: 'Id pariatur velit enim non et eu nisi occaecat quis sunt consectetur proident consectetur laborum.'\r\n            }\r\n        ]\r\n    }\r\n]","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect.js';\r\nimport {addMessageActionCreator, getDialogs} from '../redux/messages-reducer';\r\nimport Messages from './Messages.jsx';\r\nimport { messages } from '../data/messagesData.js';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MessageContainer = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.getDialogs(messages)\r\n    }, [])\r\n\r\n    return <Messages\r\n        messagesPage = {props.messagesPage}\r\n        auth = {props.auth}\r\n        addMessageDialogs = {props.addMessageDialogs}\r\n        authLogin = {props.login}\r\n    />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n        auth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageDialogs: (message) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        },\r\n        getDialogs: (message) => {\r\n            dispatch(getDialogs(message));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect( mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(MessageContainer)","import LoadIcone from './loader.svg'\r\nimport s from './loadingPage.module.css'\r\n\r\nconst LoadingPage = () => {\r\n    return (\r\n        <div className={s.loadingWrapper}>\r\n            <img src = {LoadIcone}/>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default LoadingPage","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './user.module.css';\r\nimport CustomButton from '../common/CustomButton'\r\n\r\nconst UserUnit = (props) => {\r\n    \r\n    let userFollowed = () => {\r\n\r\n        \r\n        !props.followed\r\n        ? props.followOnUserThunkCreator(props.userID)\r\n        : props.unfollowOnUserThunkCreator(props.userID);\r\n    }\r\n    return (\r\n        <div className = {s.userWrapper}>\r\n            <div className = {s.userIcone}></div>\r\n            <div className = {s.textWrapper}>\r\n                <NavLink \r\n                    to = {'/Profile/' + props.userID} \r\n                    className = {s.username}\r\n                >\r\n                    {props.userName}\r\n                </NavLink>\r\n                <p className = {s.about}>{props.status}</p>\r\n            </div>\r\n            <CustomButton \r\n                disabled = {props.userFollowIsFetching.some(item => item == props.userID)}\r\n                cb = {userFollowed}>\r\n                    {props.followed ? 'unfollow' : 'follow'}\r\n            </CustomButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserUnit;","import React from \"react\";\r\nimport CustomButton from \"../common/CustomButton\";\r\nimport LoadingPage from \"../common/LoadingPage\";\r\nimport s from './user.module.css';\r\nimport UserUnit from './UserUnit';\r\nimport LoadIcone from './Walk.gif';\r\n\r\nconst User = (props) => {\r\n\r\n    let page = [];\r\n\r\n    for(let i = 0; i < 5; i++) {\r\n        if ((props.userPage.currentPage - 2) + i > 0 && (props.userPage.currentPage - 2) + i <= props.userPage.amountPage) {\r\n            page.push((props.userPage.currentPage - 2) + i);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className = {s.content}>\r\n            <div>\r\n                {props.userPage.pageLoad ? <LoadingPage/> : props.userPage.users.map((item) => {\r\n                    return(\r\n                        <UserUnit userName = {item.name}\r\n                                    status = {item.status} \r\n                                    followed = {item.followed}\r\n                                    userID = {item.id}\r\n                                    followFetching = {props.followFetching}\r\n                                    unfollowFetching = {props.unfollowFetching}\r\n                                    followingInProgress = {props.userPage.followingInProgress}\r\n                                    userFollowIsFetching = {props.userPage.userFollowIsFetching}\r\n                                    followOnUserThunkCreator = {props.followOnUserThunkCreator}\r\n                                    unfollowOnUserThunkCreator = {props.unfollowOnUserThunkCreator}/>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className = {s.buttonWrapper}>\r\n                <CustomButton cb = {() => {props.onPageChange(props.userPage.currentPage-1)}}>Предыдущая страница</CustomButton>\r\n                    <ul className = {s.pageNumWrapper}>\r\n                        {\r\n                            page.map((item) => {\r\n                                return (\r\n                                    <li \r\n                                        onClick = {() => {props.onPageChange(item)}} \r\n                                        className = {props.userPage.currentPage == item ? s.activeLi : s.commonLi}\r\n                                    >\r\n                                        {item}\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                <CustomButton cb = {() => {props.onPageChange(props.userPage.currentPage+1)}}>Следующая страница</CustomButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","export default __webpack_public_path__ + \"static/media/Walk.84fed2e4.gif\";","import {userAPI} from '../api/api';\r\n\r\nconst FOLLOW = 'user-reducer/FOLLOW';\r\nconst SET_USERS = 'user-reducer/SET_USERS';\r\nconst SET_AMOUNT_PAGE = 'user-reducer/SET_AMOUNT_PAGE';\r\nconst CHANGE_CURRENT_PAGE = 'user-reducer/CHANGE_CURRENT_PAGE';\r\nconst CHANGE_PAGE_LOAD = 'user-reducer/CHANGE_PAGE_LOAD';\r\nconst FOLLOW_FETCHING = 'user-reducer/FOLLOW_FETCHING';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    currentPage: 1,\r\n    amountPage: 0,\r\n    amountUsers: 10,\r\n    pageLoad: false,\r\n    userFollowIsFetching: [],\r\n    followingInProgress: false,\r\n};\r\n\r\nexport let userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((item) => {\r\n                    if (action.id === item.id) {\r\n                        item.followed = !item.followed;\r\n                    }\r\n                    return item;\r\n                }),\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...action.user,\r\n                ]\r\n            };\r\n        case SET_AMOUNT_PAGE:\r\n            return {\r\n                ...state,\r\n                amountPage: action.num,\r\n            }   \r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.newCurrentPage,\r\n            }\r\n        case CHANGE_PAGE_LOAD:\r\n            return {\r\n                ...state,\r\n                pageLoad: action.change,\r\n            }\r\n        case FOLLOW_FETCHING: \r\n            return {\r\n                ...state,\r\n                followingInProgress: action.fetching,\r\n\r\n                userFollowIsFetching: action.fetching\r\n                ? [...state.userFollowIsFetching, action.id]\r\n                : state.userFollowIsFetching.filter(item => item != action.id),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (id) => {\r\n    return {\r\n        type: 'user-reducer/FOLLOW',\r\n        id,\r\n    }\r\n}\r\n\r\nexport const setUsers = (user) => {\r\n    return {\r\n        type: 'user-reducer/SET_USERS',\r\n        user,\r\n    }\r\n}\r\n\r\nexport const setAmountPage = (num) => {\r\n    return {\r\n        type: 'user-reducer/SET_AMOUNT_PAGE',\r\n        num,\r\n    }\r\n}\r\n\r\nexport const changeCurrentPage = (newCurrentPage) => {\r\n    return {\r\n        type: 'user-reducer/CHANGE_CURRENT_PAGE',\r\n        newCurrentPage,\r\n    }\r\n}\r\n\r\nexport const changePageLoad = (change) => {\r\n    return {\r\n        type: 'user-reducer/CHANGE_PAGE_LOAD',\r\n        change,\r\n    }\r\n}\r\nexport const followFetching = (id, fetching) => {\r\n    return {\r\n        type: 'user-reducer/FOLLOW_FETCHING',\r\n        id,\r\n        fetching,\r\n    }\r\n}\r\n\r\nexport const getUsersThunkCreator = (amountUsers) => {\r\n    return async (dispatch) => {\r\n        dispatch(changePageLoad(true));\r\n        let response = await userAPI.getUsers(amountUsers);\r\n\r\n        dispatch(changePageLoad(false));\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setAmountPage(Math.ceil(response.totalCount/amountUsers)));\r\n    }\r\n}\r\n\r\nexport const unfollowOnUserThunkCreator = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(followFetching(userID, true));\r\n        let response = await userAPI.unfollowOnUser(userID);\r\n\r\n        if (response.resultCode == 0) {\r\n            dispatch(follow(userID));\r\n        }\r\n        dispatch(followFetching(userID, false));\r\n    }\r\n}\r\n\r\nexport const followOnUserThunkCreator = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(followFetching(userID, true));\r\n        let response = await userAPI.followOnUser(userID);\r\n\r\n        if (response.resultCode == 0) {\r\n            dispatch(follow(userID));\r\n        }\r\n        dispatch(followFetching(userID, false));\r\n    }\r\n}\r\n\r\nexport const onPageChangeThunkCreator = (pageNumber) => {\r\n    return async (dispatch) => {\r\n        dispatch(changePageLoad(true));\r\n        let response = await userAPI.getNewPageUsers(pageNumber);\r\n\r\n        dispatch(changePageLoad(false));\r\n        dispatch(changeCurrentPage(pageNumber));\r\n        dispatch(setUsers(response.items));\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport User from './User';\r\nimport {getUsersThunkCreator, followOnUserThunkCreator, unfollowOnUserThunkCreator, onPageChangeThunkCreator} from '../redux/user-reducer';\r\nimport React from \"react\";\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass UserAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.userPage.amountUsers);\r\n    }\r\n\r\n    onPageChange = (pageNumber) => {\r\n        this.props.onPageChangeThunkCreator(pageNumber);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <User userPage = {this.props.userPage}\r\n                    onPageChange = {this.onPageChange}\r\n                    followOnUserThunkCreator = {this.props.followOnUserThunkCreator}\r\n                    unfollowOnUserThunkCreator = {this.props.unfollowOnUserThunkCreator}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStoreToProps = (state) => {\r\n    return {\r\n        userPage: state.userPage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStoreToProps, {\r\n        getUsersThunkCreator,\r\n        followOnUserThunkCreator,\r\n        unfollowOnUserThunkCreator,\r\n        onPageChangeThunkCreator\r\n    }),\r\n    withAuthRedirect\r\n)(UserAPIComponent);","import React from 'react';\r\nimport s from './sidebar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UserUnit = (props) => {\r\n    return (\r\n        <li>{props.name}</li>\r\n    );\r\n}\r\n\r\nconst Sidebar = (props) => {\r\n    let peopleData = [\r\n        {name: \"Ярик\"},\r\n        {name: \"Паша\"},\r\n        {name: \"Надя\"},\r\n        {name: \"Настя\"},\r\n        {name: \"Миша\"}\r\n    ];\r\n\r\n    let users = peopleData.map((item)=>{\r\n        return (\r\n            <UserUnit name = {item.name}/>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <sidebar className = {s.sideBar}>\r\n            <ul className = {s.menu}>\r\n                <li>\r\n                    <NavLink \r\n                        className = {s.navElement} \r\n                        to = {\"/Profile/\" + props.auth.id}\r\n                    >\r\n                        <p \r\n                            className={s.sideButton}\r\n                        >\r\n                            Профиль\r\n                        </p>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                        className = {s.navElement} \r\n                        to = {\"/Messages\"}\r\n                    >\r\n                        <p \r\n                            className={s.sideButton}\r\n                        >\r\n                            Сообщения\r\n                        </p>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                        className = {s.navElement} \r\n                        to = {\"/User\"}\r\n                    >\r\n                        <p \r\n                            className={s.sideButton}\r\n                        >\r\n                            Пользователи\r\n                        </p>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink \r\n                        className = {s.navElement} \r\n                        to = {\"/Settings\"}\r\n                    >\r\n                        <p \r\n                            className={s.sideButton}\r\n                        >\r\n                            Настройки\r\n                        </p>\r\n                    </NavLink>\r\n                </li>\r\n                <li \r\n                    className = {s.navElement}\r\n                    onClick = {props.logout}\r\n                >\r\n                    <p \r\n                        className={s.sideButton}\r\n                    >\r\n                        Выход\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n        </sidebar>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import { stopSubmit } from 'redux-form';\r\nimport {myAPI} from '../api/api';\r\n\r\nlet SET_AUTH_USER = \"auth-reducer/SET_AUTH_USER\";\r\nlet SET_CAPCHA = \"auth-reducer/SET_CAPCHA\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    capcha: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_AUTH_USER:\r\n            return {\r\n                ...state,\r\n                ...action.user,\r\n            };\r\n        case SET_CAPCHA:\r\n            return {\r\n                ...state,\r\n                capcha: action.capcha,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let setAuthUser = (id, email, login, isAuth) => {\r\n    return {type: \"auth-reducer/SET_AUTH_USER\", user: {id, email, login, isAuth}}\r\n}\r\nexport let setCapcha = (capcha) => {\r\n    return {type: \"auth-reducer/SET_CAPCHA\", capcha}\r\n}\r\n\r\nexport const getMyThunkCreator = () => {\r\n    return async (dispatch) => {\r\n        let response = await myAPI.getMe()\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data;\r\n            dispatch(setAuthUser(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, capcha = null) => {\r\n    return async (dispatch) => {\r\n        let response = await myAPI.login(email, password, rememberMe, capcha);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getMyThunkCreator());\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(capchaThunk());\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n            dispatch(stopSubmit(\"login\", {_error: message}))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await myAPI.logout();\r\n    \r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUser(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const capchaThunk = () => {\r\n    return async (dispatch) => {\r\n        let response = await myAPI.capcha();\r\n        const capcha = response.data.url;\r\n\r\n        dispatch(setCapcha(capcha));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\nimport { getMyThunkCreator, logout } from '../redux/auth-reducer';\r\n\r\nclass SidebarAPIContainer extends React.Component {\r\n\r\n    loginCheck () {\r\n        this.props.getMyThunkCreator();\r\n    }\r\n\r\n    logout () {\r\n        this.props.logout();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Sidebar auth = {this.props.auth}\r\n                        loginCheck = {this.loginCheck.bind(this)}\r\n                        logout = {this.logout.bind(this)}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nlet SidebarContainer = connect(mapStateToProps, {\r\n    getMyThunkCreator,\r\n    logout\r\n})(SidebarAPIContainer);\r\n\r\nexport default SidebarContainer;","import { Field, reduxForm } from 'redux-form';\r\nimport { createCustomField, Input } from '../formsControl';\r\nimport { hasText } from '../redux/validators';\r\nimport s from './login.css';\r\nimport {login} from '../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit }>\r\n            <div><Field name = {\"email\"} component = {Input} validate = {hasText}/></div>\r\n            <div><Field placeholder = {\"Password\"} name = {\"password\"} type = {'password'} component = {Input} validate = {hasText}/></div>\r\n            <div><Field component = {\"input\"} name = {\"rememberMe\"} type = {\"checkbox\"}/></div> \r\n            {props.auth.capcha && <img src = {props.auth.capcha}/>}\r\n            {props.auth.capcha && createCustomField([], 'capcha', hasText, Input)}\r\n            {props.error && <div>\r\n                {props.error}\r\n            </div>}\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    let onSubmit = (formData) => {\r\n        console.log(formData);\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.capcha)\r\n    }\r\n\r\n    if (props.auth.isAuth) {\r\n        return <Redirect to = {`/Profile/${props.auth.id}`}/>\r\n    }\r\n\r\n    return (\r\n        <div className = {s.loginWrapper}>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit = {onSubmit} auth = {props.auth}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { getMyThunkCreator } from './auth-reducer';\r\n\r\nlet INITIALIZED_SUCCSESS = \"app-reducer/INITIALIZED_SUCCSESS\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCSESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let initializedSuccsess = () => {\r\n    return {type: \"app-reducer/INITIALIZED_SUCCSESS\",}\r\n}\r\n\r\nexport const initializedApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getMyThunkCreator());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccsess())\r\n        })\r\n    }\r\n}\r\n\r\nexport default AppReducer;","import s from './App.module.css';\nimport Header from './header/Header.jsx';\nimport ProfileContainer from './profile/ProfileContainer.jsx';\nimport MessagesContainer from './dialogs/MessagesContainer.jsx';\nimport UserContainer from './user/UserContainer.jsx';\nimport {BrowserRouter, Redirect, Route, withRouter} from \"react-router-dom\";\nimport SidebarContainer from './sidebar/SidebarContainer';\nimport Login from './login/Login';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {initializedApp} from './redux/app-reducer';\nimport { compose } from 'redux';\nimport LoadingPage from './common/LoadingPage';\n\nclass App extends React.Component {\n  componentDidMount () {\n    this.props.initializedApp();\n  }\n\n  render () {\n    if (!this.props.initialized) {\n      return <LoadingPage/>\n    }\n    \n\n    return (\n      <BrowserRouter>\n        <div className={s.app}>\n          <Header/>\n          <SidebarContainer/>\n          <Route path = \"/Profile/:id\" render = {() => <ProfileContainer/>}/>\n          <Route path = \"/Messages/:id?\" render = {() => <MessagesContainer/>}/>\n          <Route path = \"/User\" render = {() => <UserContainer/>}/>\n          <Route path = \"/Login\" render = {() => <Login/>}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst MapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized,\n    login: state.auth.id\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(MapStateToProps, {initializedApp})\n) (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let ADD_NEWS = \"news-reducer/ADD_NEWS\";\r\n\r\nlet initialState = {\r\n    newNewsText: '',\r\n    news: [\r\n        {message: 'Hello', id: 1},\r\n        {message: 'How are u?', id: 2},\r\n        {message: 'Hi', id: 5},\r\n        {message: 'Privet', id: 3},\r\n    ],\r\n}\r\n\r\nlet newsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_NEWS:\r\n            return {\r\n                ...state,\r\n                news: [\r\n                    ...state.news, \r\n                    {message: action.news, id: 5},\r\n                ],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let addNewsActionCreator = (news) => {\r\n    return {type: \"news-reducer/ADD_NEWS\", news}\r\n}\r\n\r\nexport default newsReducer;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport messagesReducer from \"./messages-reducer\";\r\nimport newsReducer from \"./news-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {userReducer} from \"./user-reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport AppReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: messagesReducer,\r\n    profilePage: profileReducer,\r\n    newsPage: newsReducer,\r\n    userPage: userReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: AppReducer,\r\n\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store.js';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store = {store}>\n      <App/>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1IXp_\",\"login\":\"header_login__2b0ph\",\"headerTitle\":\"header_headerTitle__3pq_M\"};"],"sourceRoot":""}